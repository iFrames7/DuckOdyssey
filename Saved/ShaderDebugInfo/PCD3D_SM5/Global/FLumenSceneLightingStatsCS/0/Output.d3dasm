//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _RootShaderParameters
// {
//
//   uint LightingStatMode;             // Offset:   52 Size:     4
//
// }
//
// cbuffer ShaderPrintData
// {
//
//   int2 ShaderPrintData_Resolution;   // Offset:    0 Size:     8 [unused]
//   int2 ShaderPrintData_CursorCoord;  // Offset:    8 Size:     8 [unused]
//   float3 ShaderPrintData_TranslatedWorldOffset;// Offset:   16 Size:    12 [unused]
//   float PrePadding_ShaderPrintData_28;// Offset:   28 Size:     4 [unused]
//   float2 ShaderPrintData_FontSize;   // Offset:   32 Size:     8 [unused]
//   float2 ShaderPrintData_FontSpacing;// Offset:   40 Size:     8
//   uint ShaderPrintData_MaxValueCount;// Offset:   48 Size:     4
//   uint ShaderPrintData_MaxSymbolCount;// Offset:   52 Size:     4 [unused]
//   uint ShaderPrintData_MaxStateCount;// Offset:   56 Size:     4 [unused]
//   uint ShaderPrintData_MaxLineCount; // Offset:   60 Size:     4 [unused]
//   uint ShaderPrintData_MaxTriangleCount;// Offset:   64 Size:     4 [unused]
//
// }
//
// Resource bind info for PriorityHistogram
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for MaxUpdateBucket
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for CardPageTileAllocator
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for DirectLightingCardPageIndexAllocator
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for IndirectLightingCardPageIndexAllocator
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for ShaderPrint_RWEntryBuffer
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PriorityHistogram                 texture  struct         r/o             t0      1 
// MaxUpdateBucket                   texture  struct         r/o             t1      1 
// CardPageTileAllocator             texture  struct         r/o             t2      1 
// DirectLightingCardPageIndexAllocator    texture  struct         r/o             t3      1 
// IndirectLightingCardPageIndexAllocator    texture  struct         r/o             t4      1 
// ShaderPrint_RWEntryBuffer             UAV  struct         r/w             u0      1 
// _RootShaderParameters             cbuffer      NA          NA            cb0      1 
// ShaderPrintData                   cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 89, 0, 0, 0},
                              { 101, 0, 0, 0},
                              { 115, 0, 0, 0},
                              { 32, 0, 0, 0},
                              { 78, 0, 0, 0},
                              { 111, 0, 0, 0},
                              { 32, 0, 0, 0},
                              { 32, 0, 0, 0},
                              { 89, 0, 0, 0},
                              { 101, 0, 0, 0},
                              { 115, 0, 0, 0},
                              { 32, 0, 0, 0},
                              { 78, 0, 0, 0},
                              { 111, 0, 0, 0},
                              { 32, 0, 0, 0},
                              { 32, 0, 0, 0},
                              { 77, 0, 0, 0},
                              { 97, 0, 0, 0},
                              { 120, 0, 0, 0},
                              { 66, 0, 0, 0},
                              { 117, 0, 0, 0},
                              { 99, 0, 0, 0},
                              { 107, 0, 0, 0},
                              { 101, 0, 0, 0},
                              { 116, 0, 0, 0},
                              { 32, 0, 0, 0},
                              { 77, 0, 0, 0},
                              { 97, 0, 0, 0},
                              { 120, 0, 0, 0},
                              { 84, 0, 0, 0},
                              { 105, 0, 0, 0},
                              { 108, 0, 0, 0},
                              { 101, 0, 0, 0},
                              { 115, 0, 0, 0},
                              { 70, 0, 0, 0},
                              { 114, 0, 0, 0},
                              { 111, 0, 0, 0},
                              { 109, 0, 0, 0},
                              { 77, 0, 0, 0},
                              { 97, 0, 0, 0},
                              { 120, 0, 0, 0},
                              { 66, 0, 0, 0},
                              { 117, 0, 0, 0},
                              { 99, 0, 0, 0},
                              { 107, 0, 0, 0},
                              { 101, 0, 0, 0},
                              { 116, 0, 0, 0},
                              { 32, 0, 0, 0},
                              { 79, 0, 0, 0},
                              { 117, 0, 0, 0},
                              { 116, 0, 0, 0},
                              { 32, 0, 0, 0},
                              { 32, 0, 0, 0},
                              { 80, 0, 0, 0},
                              { 97, 0, 0, 0},
                              { 103, 0, 0, 0},
                              { 101, 0, 0, 0},
                              { 115, 0, 0, 0},
                              { 32, 0, 0, 0},
                              { 32, 0, 0, 0},
                              { 84, 0, 0, 0},
                              { 105, 0, 0, 0},
                              { 108, 0, 0, 0},
                              { 101, 0, 0, 0},
                              { 115, 0, 0, 0},
                              { 32, 0, 0, 0} }
dcl_constantbuffer CB0[4], immediateIndexed
dcl_constantbuffer CB1[4], immediateIndexed
dcl_resource_structured t0, 4
dcl_resource_structured t1, 4
dcl_resource_structured t2, 4
dcl_resource_structured t3, 4
dcl_resource_structured t4, 4
dcl_uav_structured u0, 4
dcl_temps 3
dcl_thread_group 1, 1, 1
ieq r0.x, l(1), cb0[3].y
if_nz r0.x
  add r0.x, cb1[2].w, l(0.100000)
  mov r1.x, l(0.100000)
  mov r1.yz, cb1[2].zzwz
  mov r1.w, cb1[3].x
  mov r0.y, r0.x
  mov r0.z, l(0)
  loop 
    uge r0.w, r0.z, l(128)
    breakc_nz r0.w
    if_nz r1.w
      imm_atomic_iadd r2.x, u0, l(2, 0, 0, 0), l(1)
      ult r0.w, r2.x, r1.w
      if_nz r0.w
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r0.w, r0.z, l(0), t0.xxxx
        ishl r2.x, r2.x, l(2)
        iadd r2.y, r2.x, l(4)
        f32tof16 r2.z, r1.x
        f32tof16 r2.w, r0.y
        imad r2.z, r2.w, l(0x00010000), r2.z
        store_structured u0.x, r2.y, l(0), r2.z
        iadd r2.zw, r2.yyyy, l(0, 0, 1, 3)
        store_structured u0.x, r2.z, l(0), r0.w
        iadd r0.w, r2.y, l(2)
        store_structured u0.x, r0.w, l(0), l(-253)
        store_structured u0.x, r2.w, l(0), l(5)
      endif 
    endif 
    iadd r0.z, r0.z, l(1)
    and r0.w, r0.z, l(7)
    if_z r0.w
      add r0.y, r1.z, r0.y
      mov r1.x, l(0.100000)
    else 
      mad r0.w, r1.y, l(12.000000), r1.x
      if_nz r1.w
        imm_atomic_iadd r2.x, u0, l(2, 0, 0, 0), l(1)
        ult r2.y, r2.x, r1.w
        if_nz r2.y
          ishl r2.x, r2.x, l(2)
          iadd r2.y, r2.x, l(4)
          f32tof16 r2.z, r0.w
          f32tof16 r2.w, r0.y
          imad r2.z, r2.w, l(0x00010000), r2.z
          store_structured u0.x, r2.y, l(0), r2.z
          iadd r2.zw, r2.yyyy, l(0, 0, 1, 3)
          store_structured u0.x, r2.z, l(0), l(32)
          iadd r2.y, r2.y, l(2)
          store_structured u0.x, r2.y, l(0), l(-256)
          store_structured u0.x, r2.w, l(0), l(0)
        endif 
      endif 
      add r1.x, r1.y, r0.w
    endif 
  endloop 
  add r0.x, r0.y, cb1[2].w
  if_nz cb1[3].x
    imm_atomic_iadd r1.x, u0, l(2, 0, 0, 0), l(10)
    iadd r0.y, r1.x, l(10)
    ult r0.y, r0.y, cb1[3].x
    if_nz r0.y
      f32tof16 r0.y, r0.x
      mov r2.x, r1.x
      mov r2.y, l(16)
      mov r0.z, l(0.100000)
      loop 
        uge r0.w, r2.y, l(26)
        breakc_nz r0.w
        ishl r0.w, r2.x, l(2)
        iadd r1.y, r0.w, l(4)
        f32tof16 r1.z, r0.z
        imad r1.z, r0.y, l(0x00010000), r1.z
        store_structured u0.x, r1.y, l(0), r1.z
        iadd r1.zw, r1.yyyy, l(0, 0, 1, 3)
        store_structured u0.x, r1.z, l(0), icb[r2.y + 0].x
        iadd r1.y, r1.y, l(2)
        store_structured u0.x, r1.y, l(0), l(-256)
        store_structured u0.x, r1.w, l(0), l(0)
        add r0.z, r0.z, cb1[2].z
        iadd r2.xy, r2.xyxx, l(1, 1, 0, 0)
      endloop 
    else 
      mov r0.z, l(0.100000)
    endif 
  else 
    mov r0.z, l(0.100000)
  endif 
  if_nz cb1[3].x
    imm_atomic_iadd r1.x, u0, l(2, 0, 0, 0), l(1)
    ult r0.y, r1.x, cb1[3].x
    if_nz r0.y
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r0.y, l(0), l(0), t1.xxxx
      ishl r0.w, r1.x, l(2)
      iadd r1.x, r0.w, l(4)
      f32tof16 r0.z, r0.z
      f32tof16 r1.y, r0.x
      imad r0.z, r1.y, l(0x00010000), r0.z
      store_structured u0.x, r1.x, l(0), r0.z
      iadd r1.yz, r1.xxxx, l(0, 1, 3, 0)
      store_structured u0.x, r1.y, l(0), r0.y
      iadd r0.y, r1.x, l(2)
      store_structured u0.x, r0.y, l(0), l(-253)
      store_structured u0.x, r1.z, l(0), l(5)
    endif 
  endif 
  add r0.x, r0.x, cb1[2].w
  if_nz cb1[3].x
    imm_atomic_iadd r1.x, u0, l(2, 0, 0, 0), l(22)
    iadd r0.y, r1.x, l(22)
    ult r0.y, r0.y, cb1[3].x
    if_nz r0.y
      f32tof16 r0.y, r0.x
      mov r2.x, r1.x
      mov r2.y, l(26)
      mov r0.z, l(0.100000)
      loop 
        uge r0.w, r2.y, l(48)
        breakc_nz r0.w
        ishl r0.w, r2.x, l(2)
        iadd r1.y, r0.w, l(4)
        f32tof16 r1.z, r0.z
        imad r1.z, r0.y, l(0x00010000), r1.z
        store_structured u0.x, r1.y, l(0), r1.z
        iadd r1.zw, r1.yyyy, l(0, 0, 1, 3)
        store_structured u0.x, r1.z, l(0), icb[r2.y + 0].x
        iadd r1.y, r1.y, l(2)
        store_structured u0.x, r1.y, l(0), l(-256)
        store_structured u0.x, r1.w, l(0), l(0)
        add r0.z, r0.z, cb1[2].z
        iadd r2.xy, r2.xyxx, l(1, 1, 0, 0)
      endloop 
    else 
      mov r0.z, l(0.100000)
    endif 
  else 
    mov r0.z, l(0.100000)
  endif 
  if_nz cb1[3].x
    imm_atomic_iadd r1.x, u0, l(2, 0, 0, 0), l(1)
    ult r0.y, r1.x, cb1[3].x
    if_nz r0.y
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r0.y, l(1), l(0), t1.xxxx
      ishl r0.w, r1.x, l(2)
      iadd r1.x, r0.w, l(4)
      f32tof16 r0.z, r0.z
      f32tof16 r1.y, r0.x
      imad r0.z, r1.y, l(0x00010000), r0.z
      store_structured u0.x, r1.x, l(0), r0.z
      iadd r1.yz, r1.xxxx, l(0, 1, 3, 0)
      store_structured u0.x, r1.y, l(0), r0.y
      iadd r0.y, r1.x, l(2)
      store_structured u0.x, r0.y, l(0), l(-253)
      store_structured u0.x, r1.z, l(0), l(5)
    endif 
  endif 
  add r0.x, r0.x, cb1[2].w
  if_nz cb1[3].x
    imm_atomic_iadd r1.x, u0, l(2, 0, 0, 0), l(4)
    iadd r0.y, r1.x, l(4)
    ult r0.y, r0.y, cb1[3].x
    if_nz r0.y
      f32tof16 r0.y, r0.x
      mov r2.x, r1.x
      mov r2.y, l(48)
      mov r0.z, l(0.100000)
      loop 
        uge r0.w, r2.y, l(52)
        breakc_nz r0.w
        ishl r0.w, r2.x, l(2)
        iadd r1.y, r0.w, l(4)
        f32tof16 r1.z, r0.z
        imad r1.z, r0.y, l(0x00010000), r1.z
        store_structured u0.x, r1.y, l(0), r1.z
        iadd r1.zw, r1.yyyy, l(0, 0, 1, 3)
        store_structured u0.x, r1.z, l(0), icb[r2.y + 0].x
        iadd r1.y, r1.y, l(2)
        store_structured u0.x, r1.y, l(0), l(-256)
        store_structured u0.x, r1.w, l(0), l(0)
        add r0.z, r0.z, cb1[2].z
        iadd r2.xy, r2.xyxx, l(1, 1, 0, 0)
      endloop 
    endif 
  endif 
  add r0.x, r0.x, cb1[2].w
  if_nz cb1[3].x
    imm_atomic_iadd r1.x, u0, l(2, 0, 0, 0), l(7)
    iadd r0.y, r1.x, l(7)
    ult r0.y, r0.y, cb1[3].x
    if_nz r0.y
      f32tof16 r0.y, r0.x
      mov r2.x, r1.x
      mov r2.y, l(52)
      mov r0.z, l(0.100000)
      loop 
        uge r0.w, r2.y, l(59)
        breakc_nz r0.w
        ishl r0.w, r2.x, l(2)
        iadd r1.y, r0.w, l(4)
        f32tof16 r1.z, r0.z
        imad r1.z, r0.y, l(0x00010000), r1.z
        store_structured u0.x, r1.y, l(0), r1.z
        iadd r1.zw, r1.yyyy, l(0, 0, 1, 3)
        store_structured u0.x, r1.z, l(0), icb[r2.y + 0].x
        iadd r1.y, r1.y, l(2)
        store_structured u0.x, r1.y, l(0), l(-256)
        store_structured u0.x, r1.w, l(0), l(0)
        add r0.z, r0.z, cb1[2].z
        iadd r2.xy, r2.xyxx, l(1, 1, 0, 0)
      endloop 
    else 
      mov r0.z, l(0.100000)
    endif 
  else 
    mov r0.z, l(0.100000)
  endif 
  if_nz cb1[3].x
    imm_atomic_iadd r1.x, u0, l(2, 0, 0, 0), l(1)
    ult r0.y, r1.x, cb1[3].x
    if_nz r0.y
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r0.y, l(0), l(0), t3.xxxx
      ishl r0.w, r1.x, l(2)
      iadd r1.x, r0.w, l(4)
      f32tof16 r0.z, r0.z
      f32tof16 r1.y, r0.x
      imad r0.z, r1.y, l(0x00010000), r0.z
      store_structured u0.x, r1.x, l(0), r0.z
      iadd r1.yz, r1.xxxx, l(0, 1, 3, 0)
      store_structured u0.x, r1.y, l(0), r0.y
      iadd r0.y, r1.x, l(2)
      store_structured u0.x, r0.y, l(0), l(-253)
      store_structured u0.x, r1.z, l(0), l(5)
    endif 
  endif 
  add r0.x, r0.x, cb1[2].w
  if_nz cb1[3].x
    imm_atomic_iadd r1.x, u0, l(2, 0, 0, 0), l(7)
    iadd r0.y, r1.x, l(7)
    ult r0.y, r0.y, cb1[3].x
    if_nz r0.y
      f32tof16 r0.y, r0.x
      mov r2.x, r1.x
      mov r2.y, l(59)
      mov r0.z, l(0.100000)
      loop 
        uge r0.w, r2.y, l(66)
        breakc_nz r0.w
        ishl r0.w, r2.x, l(2)
        iadd r1.y, r0.w, l(4)
        f32tof16 r1.z, r0.z
        imad r1.z, r0.y, l(0x00010000), r1.z
        store_structured u0.x, r1.y, l(0), r1.z
        iadd r1.zw, r1.yyyy, l(0, 0, 1, 3)
        store_structured u0.x, r1.z, l(0), icb[r2.y + 0].x
        iadd r1.y, r1.y, l(2)
        store_structured u0.x, r1.y, l(0), l(-256)
        store_structured u0.x, r1.w, l(0), l(0)
        add r0.z, r0.z, cb1[2].z
        iadd r2.xy, r2.xyxx, l(1, 1, 0, 0)
      endloop 
    else 
      mov r0.z, l(0.100000)
    endif 
  else 
    mov r0.z, l(0.100000)
  endif 
  if_nz cb1[3].x
    imm_atomic_iadd r1.x, u0, l(2, 0, 0, 0), l(1)
    ult r0.y, r1.x, cb1[3].x
    if_nz r0.y
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r0.y, l(0), l(0), t2.xxxx
      ishl r0.w, r1.x, l(2)
      iadd r1.x, r0.w, l(4)
      f32tof16 r0.xz, r0.xxzx
      imad r0.x, r0.x, l(0x00010000), r0.z
      store_structured u0.x, r1.x, l(0), r0.x
      iadd r0.xz, r1.xxxx, l(1, 0, 3, 0)
      store_structured u0.x, r0.x, l(0), r0.y
      iadd r0.x, r1.x, l(2)
      store_structured u0.x, r0.x, l(0), l(-253)
      store_structured u0.x, r0.z, l(0), l(5)
    endif 
  endif 
else 
  add r0.x, cb1[2].w, l(0.100000)
  mov r1.x, l(0.100000)
  mov r1.yz, cb1[2].zzwz
  mov r1.w, cb1[3].x
  mov r0.y, r0.x
  mov r0.z, l(0)
  loop 
    uge r0.w, r0.z, l(128)
    breakc_nz r0.w
    if_nz r1.w
      imm_atomic_iadd r2.x, u0, l(2, 0, 0, 0), l(1)
      ult r0.w, r2.x, r1.w
      if_nz r0.w
        iadd r0.w, r0.z, l(128)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r0.w, r0.w, l(0), t0.xxxx
        ishl r2.x, r2.x, l(2)
        iadd r2.y, r2.x, l(4)
        f32tof16 r2.z, r1.x
        f32tof16 r2.w, r0.y
        imad r2.z, r2.w, l(0x00010000), r2.z
        store_structured u0.x, r2.y, l(0), r2.z
        iadd r2.zw, r2.yyyy, l(0, 0, 1, 3)
        store_structured u0.x, r2.z, l(0), r0.w
        iadd r0.w, r2.y, l(2)
        store_structured u0.x, r0.w, l(0), l(-253)
        store_structured u0.x, r2.w, l(0), l(5)
      endif 
    endif 
    iadd r0.z, r0.z, l(1)
    and r0.w, r0.z, l(7)
    if_z r0.w
      add r0.y, r1.z, r0.y
      mov r1.x, l(0.100000)
    else 
      mad r0.w, r1.y, l(12.000000), r1.x
      if_nz r1.w
        imm_atomic_iadd r2.x, u0, l(2, 0, 0, 0), l(1)
        ult r2.y, r2.x, r1.w
        if_nz r2.y
          ishl r2.x, r2.x, l(2)
          iadd r2.y, r2.x, l(4)
          f32tof16 r2.z, r0.w
          f32tof16 r2.w, r0.y
          imad r2.z, r2.w, l(0x00010000), r2.z
          store_structured u0.x, r2.y, l(0), r2.z
          iadd r2.zw, r2.yyyy, l(0, 0, 1, 3)
          store_structured u0.x, r2.z, l(0), l(32)
          iadd r2.y, r2.y, l(2)
          store_structured u0.x, r2.y, l(0), l(-256)
          store_structured u0.x, r2.w, l(0), l(0)
        endif 
      endif 
      add r1.x, r1.y, r0.w
    endif 
  endloop 
  add r0.x, r0.y, cb1[2].w
  if_nz cb1[3].x
    imm_atomic_iadd r1.x, u0, l(2, 0, 0, 0), l(10)
    iadd r0.y, r1.x, l(10)
    ult r0.y, r0.y, cb1[3].x
    if_nz r0.y
      f32tof16 r0.y, r0.x
      mov r2.x, r1.x
      mov r2.y, l(16)
      mov r0.z, l(0.100000)
      loop 
        uge r0.w, r2.y, l(26)
        breakc_nz r0.w
        ishl r0.w, r2.x, l(2)
        iadd r1.y, r0.w, l(4)
        f32tof16 r1.z, r0.z
        imad r1.z, r0.y, l(0x00010000), r1.z
        store_structured u0.x, r1.y, l(0), r1.z
        iadd r1.zw, r1.yyyy, l(0, 0, 1, 3)
        store_structured u0.x, r1.z, l(0), icb[r2.y + 0].x
        iadd r1.y, r1.y, l(2)
        store_structured u0.x, r1.y, l(0), l(-256)
        store_structured u0.x, r1.w, l(0), l(0)
        add r0.z, r0.z, cb1[2].z
        iadd r2.xy, r2.xyxx, l(1, 1, 0, 0)
      endloop 
    else 
      mov r0.z, l(0.100000)
    endif 
  else 
    mov r0.z, l(0.100000)
  endif 
  if_nz cb1[3].x
    imm_atomic_iadd r1.x, u0, l(2, 0, 0, 0), l(1)
    ult r0.y, r1.x, cb1[3].x
    if_nz r0.y
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r0.y, l(2), l(0), t1.xxxx
      ishl r0.w, r1.x, l(2)
      iadd r1.x, r0.w, l(4)
      f32tof16 r0.z, r0.z
      f32tof16 r1.y, r0.x
      imad r0.z, r1.y, l(0x00010000), r0.z
      store_structured u0.x, r1.x, l(0), r0.z
      iadd r1.yz, r1.xxxx, l(0, 1, 3, 0)
      store_structured u0.x, r1.y, l(0), r0.y
      iadd r0.y, r1.x, l(2)
      store_structured u0.x, r0.y, l(0), l(-253)
      store_structured u0.x, r1.z, l(0), l(5)
    endif 
  endif 
  add r0.x, r0.x, cb1[2].w
  if_nz cb1[3].x
    imm_atomic_iadd r1.x, u0, l(2, 0, 0, 0), l(22)
    iadd r0.y, r1.x, l(22)
    ult r0.y, r0.y, cb1[3].x
    if_nz r0.y
      f32tof16 r0.y, r0.x
      mov r2.x, r1.x
      mov r2.y, l(26)
      mov r0.z, l(0.100000)
      loop 
        uge r0.w, r2.y, l(48)
        breakc_nz r0.w
        ishl r0.w, r2.x, l(2)
        iadd r1.y, r0.w, l(4)
        f32tof16 r1.z, r0.z
        imad r1.z, r0.y, l(0x00010000), r1.z
        store_structured u0.x, r1.y, l(0), r1.z
        iadd r1.zw, r1.yyyy, l(0, 0, 1, 3)
        store_structured u0.x, r1.z, l(0), icb[r2.y + 0].x
        iadd r1.y, r1.y, l(2)
        store_structured u0.x, r1.y, l(0), l(-256)
        store_structured u0.x, r1.w, l(0), l(0)
        add r0.z, r0.z, cb1[2].z
        iadd r2.xy, r2.xyxx, l(1, 1, 0, 0)
      endloop 
    else 
      mov r0.z, l(0.100000)
    endif 
  else 
    mov r0.z, l(0.100000)
  endif 
  if_nz cb1[3].x
    imm_atomic_iadd r1.x, u0, l(2, 0, 0, 0), l(1)
    ult r0.y, r1.x, cb1[3].x
    if_nz r0.y
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r0.y, l(3), l(0), t1.xxxx
      ishl r0.w, r1.x, l(2)
      iadd r1.x, r0.w, l(4)
      f32tof16 r0.z, r0.z
      f32tof16 r1.y, r0.x
      imad r0.z, r1.y, l(0x00010000), r0.z
      store_structured u0.x, r1.x, l(0), r0.z
      iadd r1.yz, r1.xxxx, l(0, 1, 3, 0)
      store_structured u0.x, r1.y, l(0), r0.y
      iadd r0.y, r1.x, l(2)
      store_structured u0.x, r0.y, l(0), l(-253)
      store_structured u0.x, r1.z, l(0), l(5)
    endif 
  endif 
  add r0.x, r0.x, cb1[2].w
  if_nz cb1[3].x
    imm_atomic_iadd r1.x, u0, l(2, 0, 0, 0), l(4)
    iadd r0.y, r1.x, l(4)
    ult r0.y, r0.y, cb1[3].x
    if_nz r0.y
      f32tof16 r0.y, r0.x
      mov r2.x, r1.x
      mov r2.y, l(48)
      mov r0.z, l(0.100000)
      loop 
        uge r0.w, r2.y, l(52)
        breakc_nz r0.w
        ishl r0.w, r2.x, l(2)
        iadd r1.y, r0.w, l(4)
        f32tof16 r1.z, r0.z
        imad r1.z, r0.y, l(0x00010000), r1.z
        store_structured u0.x, r1.y, l(0), r1.z
        iadd r1.zw, r1.yyyy, l(0, 0, 1, 3)
        store_structured u0.x, r1.z, l(0), icb[r2.y + 0].x
        iadd r1.y, r1.y, l(2)
        store_structured u0.x, r1.y, l(0), l(-256)
        store_structured u0.x, r1.w, l(0), l(0)
        add r0.z, r0.z, cb1[2].z
        iadd r2.xy, r2.xyxx, l(1, 1, 0, 0)
      endloop 
    endif 
  endif 
  add r0.x, r0.x, cb1[2].w
  if_nz cb1[3].x
    imm_atomic_iadd r1.x, u0, l(2, 0, 0, 0), l(7)
    iadd r0.y, r1.x, l(7)
    ult r0.y, r0.y, cb1[3].x
    if_nz r0.y
      f32tof16 r0.y, r0.x
      mov r2.x, r1.x
      mov r2.y, l(52)
      mov r0.z, l(0.100000)
      loop 
        uge r0.w, r2.y, l(59)
        breakc_nz r0.w
        ishl r0.w, r2.x, l(2)
        iadd r1.y, r0.w, l(4)
        f32tof16 r1.z, r0.z
        imad r1.z, r0.y, l(0x00010000), r1.z
        store_structured u0.x, r1.y, l(0), r1.z
        iadd r1.zw, r1.yyyy, l(0, 0, 1, 3)
        store_structured u0.x, r1.z, l(0), icb[r2.y + 0].x
        iadd r1.y, r1.y, l(2)
        store_structured u0.x, r1.y, l(0), l(-256)
        store_structured u0.x, r1.w, l(0), l(0)
        add r0.z, r0.z, cb1[2].z
        iadd r2.xy, r2.xyxx, l(1, 1, 0, 0)
      endloop 
    else 
      mov r0.z, l(0.100000)
    endif 
  else 
    mov r0.z, l(0.100000)
  endif 
  if_nz cb1[3].x
    imm_atomic_iadd r1.x, u0, l(2, 0, 0, 0), l(1)
    ult r0.y, r1.x, cb1[3].x
    if_nz r0.y
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r0.y, l(0), l(0), t4.xxxx
      ishl r0.w, r1.x, l(2)
      iadd r1.x, r0.w, l(4)
      f32tof16 r0.z, r0.z
      f32tof16 r1.y, r0.x
      imad r0.z, r1.y, l(0x00010000), r0.z
      store_structured u0.x, r1.x, l(0), r0.z
      iadd r1.yz, r1.xxxx, l(0, 1, 3, 0)
      store_structured u0.x, r1.y, l(0), r0.y
      iadd r0.y, r1.x, l(2)
      store_structured u0.x, r0.y, l(0), l(-253)
      store_structured u0.x, r1.z, l(0), l(5)
    endif 
  endif 
  add r0.x, r0.x, cb1[2].w
  if_nz cb1[3].x
    imm_atomic_iadd r1.x, u0, l(2, 0, 0, 0), l(7)
    iadd r0.y, r1.x, l(7)
    ult r0.y, r0.y, cb1[3].x
    if_nz r0.y
      f32tof16 r0.y, r0.x
      mov r2.x, r1.x
      mov r2.y, l(59)
      mov r0.z, l(0.100000)
      loop 
        uge r0.w, r2.y, l(66)
        breakc_nz r0.w
        ishl r0.w, r2.x, l(2)
        iadd r1.y, r0.w, l(4)
        f32tof16 r1.z, r0.z
        imad r1.z, r0.y, l(0x00010000), r1.z
        store_structured u0.x, r1.y, l(0), r1.z
        iadd r1.zw, r1.yyyy, l(0, 0, 1, 3)
        store_structured u0.x, r1.z, l(0), icb[r2.y + 0].x
        iadd r1.y, r1.y, l(2)
        store_structured u0.x, r1.y, l(0), l(-256)
        store_structured u0.x, r1.w, l(0), l(0)
        add r0.z, r0.z, cb1[2].z
        iadd r2.xy, r2.xyxx, l(1, 1, 0, 0)
      endloop 
    else 
      mov r0.z, l(0.100000)
    endif 
  else 
    mov r0.z, l(0.100000)
  endif 
  if_nz cb1[3].x
    imm_atomic_iadd r1.x, u0, l(2, 0, 0, 0), l(1)
    ult r0.y, r1.x, cb1[3].x
    if_nz r0.y
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r0.y, l(2), l(0), t2.xxxx
      ishl r0.w, r1.x, l(2)
      iadd r1.x, r0.w, l(4)
      f32tof16 r0.xz, r0.xxzx
      imad r0.x, r0.x, l(0x00010000), r0.z
      store_structured u0.x, r1.x, l(0), r0.x
      iadd r0.xz, r1.xxxx, l(1, 0, 3, 0)
      store_structured u0.x, r0.x, l(0), r0.y
      iadd r0.x, r1.x, l(2)
      store_structured u0.x, r0.x, l(0), l(-253)
      store_structured u0.x, r0.z, l(0), l(5)
    endif 
  endif 
endif 
ret 
// Approximately 568 instruction slots used
